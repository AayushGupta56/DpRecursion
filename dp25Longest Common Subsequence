class Solution {
public:
      int solve(int i,int j,string &s1,string &s2,vector<vector<int>>&dp){
     if(i<0||j<0)return 0;
      if(dp[i][j]!=-1)return dp[i][j];
      if(s1[i]==s2[j])return dp[i][j]=1+solve(i-1,j-1,s1,s2,dp);
      else{
          int a=0+solve(i-1,j,s1,s2,dp);
          int b=solve(i,j-1,s1,s2,dp);
          return dp[i][j]=max(a,b);
      }


      }
    int longestCommonSubsequence(string s1, string s2) {
        int n=s1.size();int m=s2.size();
        //vector<vector<int>>dp(n,vector<int>(m,-1));
      //  return solve(n-1,m-1,s1,s2,dp);
         vector<vector<int>>dp(n+1,vector<int>(m+1,0));
         for(int i=0;i<=m;i++)dp[0][i]=0;
         for(int j=0;j<=n;j++)dp[j][0]=0;
       
         for(int i=1;i<=n;i++){
             for(int j=1;j<=m;j++){
      if(s1[i-1]==s2[j-1])dp[i][j]=1+dp[i-1][j-1];
       else{
          int a=dp[i-1][j];
          int b=dp[i][j-1];
            dp[i][j]=max(a,b);
      }
             }
         }
         return dp[n][m];
    }
};
