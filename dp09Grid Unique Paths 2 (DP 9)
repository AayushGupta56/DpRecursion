class Solution {
  public:
  int m=1e9+7;
  int solve(int i,int j,vector<vector<int>>&dp,vector<vector<int>>& grid){
      if(i<0||j<0||grid[i][j]==1)return 0;
      if(i==0&&j==0)return 1;
      if(dp[i][j]!=-1)return dp[i][j];
      int up=solve(i-1,j,dp,grid);
      int right=solve(i,j-1,dp,grid);
      return dp[i][j]=(up%m+right%m)%m;
      
  }
    int totalWays(int n, int m, vector<vector<int>>& grid) {
        // Code here
        vector<vector<int>>dp(n,vector<int>(m,-1));
        return solve(n-1,m-1,dp,grid);
        // vector<vector<int>>dp(n,vector<int>(m,0));
         
        //  for(int i=0;i<n;i++){
        //      for(int j=0;j<m;j++){
                 
        //      if(i>=0 && j>=0 &&grid[i][j]==1)dp[i][j]=0;
        //      else if(i==0&&j==0)dp[i][j]=1;
        //      else {
        //          int up=0;int right=0;
        //          if(i>0)up=dp[i-1][j];
        //          if(j>0)right=dp[i][j-1];
        //          dp[i][j]=(up+right)%m;
        //      }
        //      }
        //  }
        //  return dp[n-1][m-1];
    }
};
