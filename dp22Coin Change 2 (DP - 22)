class Solution {
public:
    int solve(int i,int target,vector<int>&arr,vector<vector<int>>&dp){
         if(target==0)return 1;
         if(i==0){
             if(target%arr[0]==0)return 1;
             
             return 0;
         }

        if(dp[i][target]!=-1)return dp[i][target];
        int pick=0;
        if(arr[i]<=target)pick=solve(i,target-arr[i],arr,dp);
        int notpick=solve(i-1,target,arr,dp);
        return dp[i][target]=pick+notpick;
    }
    int change(int target, vector<int>& arr) {
        int n=arr.size();
        vector<vector<int>>dp(n,vector<int>(target+1,-1));
        return solve(n-1,target,arr,dp);
    }
};
