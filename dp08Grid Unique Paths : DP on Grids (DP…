class Solution
{
    public:
    //Function to find total number of unique paths.
    int solve(int i,int j,vector<vector<int>>&dp){
        if(i==0&&j==0)return 1;
        if(i<0||j<0)return 0;
        if(dp[i][j]!=-1)return dp[i][j];
        int a=solve(i-1,j,dp);
        int b=solve(i,j-1,dp);
        return dp[i][j]=a+b;
    }
    int NumberOfPath(int n, int m)
    {
        //code here
        // vector<vector<int>>dp(n,vector<int>(m,-1));
        // return solve(n-1,m-1,dp);
        vector<vector<int>>dp(n,vector<int>(m,0));
        for(int i=0;i<m;i++)dp[0][i]=1;
                for(int i=0;i<n;i++)dp[i][0]=1;
                
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[n-1][m-1];
    }
};
