class Solution {
  public:
  int m=1e9+7;
  long long int solve(int n,vector<long long int>&dp){
      if(n<=1){
          return dp[n]=n;
      }
      if(dp[n]!=-1)return dp[n];
      dp[n]=(solve(n-1,dp)%m+solve(n-2,dp)%m)%m;
      return dp[n];
  }
    long long int topDown(int n) {
        // code here
        vector<long long int>dp(n+1,-1);
        
        solve(n,dp);
        return dp[n];
    }
    long long int bottomUp(int n) {
        // code hereretue
        vector<long long int>dp(n+1,0);
        dp[0]=0;dp[1]=1;
        for(int i=2;i<=n;i++){
            dp[i]=(dp[i-1]%m+dp[i-2]%m)%m;
        }
        return dp[n];
    }
};
