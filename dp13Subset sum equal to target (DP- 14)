class Solution{   
public:
      int solve(int i,int target,vector<int>&arr,vector<vector<int>>&dp){
          if(target==0)return 1;
          if(i==0){
              if(arr[i]==target)return 1;
              else return 0;
          }
          if(dp[i][target]!=-1)return dp[i][target];
          int pick=0;
          if(arr[i]<=target){
              pick=solve(i-1,target-arr[i],arr,dp);
          }
          int notpick=solve(i-1,target,arr,dp);
          
          return dp[i][target]=pick+notpick;
      }
    bool isSubsetSum(vector<int>arr, int sum){
        // code here 
        int n=arr.size();
        vector<vector<int>>dp(n,vector<int>(sum+1,-1));
        return solve(n-1,sum,arr,dp);
        
    }
};
