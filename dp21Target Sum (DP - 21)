class Solution {
public:

   int solve(int i,int target,vector<int>&arr, vector<vector<int>>&dp){
     
      if(i==0){
        if(arr[0]==0&&target==0)return 2;
          else if(target-arr[0]==0)return 1;
          else if(target==0)return 1;
          return 0;
      }
      if(dp[i][target]!=-1)return dp[i][target];
      int notpick=0;int pick=0;
      if(arr[i]<=target)pick=solve(i-1,target-arr[i],arr,dp);
      notpick=solve(i-1,target,arr,dp);
      return dp[i][target]=pick+notpick;
   }
    int findTargetSumWays(vector<int>& arr, int d) {
    int n=arr.size();int total=0;
      for(int i=0;i<n;i++)total+=arr[i];
    if(total-d<0||(total-d)%2==1)return 0;
    int target=(total-d)/2;
      vector<vector<int>>dp(n,vector<int>(target+1,-1));
      return solve(n-1,target,arr,dp)  ;
    }
};
