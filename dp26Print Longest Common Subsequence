class Solution
{
	public:
		vector<string> all_longest_common_subsequences(string s, string t)
		{
		  int n=s.size();int m=t.size();
		  vector<vector<int>>dp(n+1,vector<int>(m+1,0));
		  for(int i=1;i<=n;i++){
		      for(int j=1;j<=m;j++){
		          if(s[i-1]==t[j-1])dp[i][j]=1+dp[i-1][j-1];
		          else{
		              int a=dp[i-1][j];
		              int b=dp[i][j-1];
		              dp[i][j]=max(a,b);
		          }
		          
		      }
		  }
		 vector<string>ans;
		  
		 
		      int i=n;int j=m;
		  string subset;
		  while(i>0&&j>0){
		     if(s[i-1]==t[j-1]){subset.push_back(s[i-1]);i--;j--;}
		     else {
		         if(dp[i-1][j]>dp[i][j-1])i--;
		         else j--;
		     }    
		  }
		  reverse(subset.begin(),subset.end());
	       ans.push_back(subset);
		  
		  
		  return ans;
		}
};
