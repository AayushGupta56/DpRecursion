class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    void dfs(int i,vector<int>&vis,vector<int>adj[],vector<int>&ans){
        vis[i]=1;
        ans.push_back(i);
        for(auto it:adj[i]){
            if(vis[it]==0){
                dfs(it,vis,adj,ans);
            }
        }
        
        
    }
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        vector<int>vis(V,0);vector<int>ans;
        dfs(0,vis,adj,ans);
        return ans;
    }
};
