class Solution {
public:
    bool dfs(int node,vector<int>&vis,vector<int>vis2,vector<int>adj[]){
        vis[node]=1;vis2[node]=1;
        for(auto it:adj[node]){
            if(vis[it]==0){
                if(dfs(it,vis,vis2,adj)==true)return true;
                
            }
            else if(vis[it]==1&&vis2[it]==1)return true;
        }
        vis2[node]=0;
        return false;

    }
    bool canFinish(int n, vector<vector<int>>& pre ) {
        vector<int>adj[n];
        for(auto it:pre){
            adj[it[0]].push_back(it[1]);
        }
      vector<int>vis(n,0);vector<int>vis2(n,0);
        for(int i=0;i<n;i++){
            if(vis[i]==0){
                if(dfs(i,vis,vis2,adj)==true)return false;
            }
        }
        return true;
    }
};
