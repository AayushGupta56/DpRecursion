class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int n, vector<int> adj[]) {
        // code here
        vector<int>indegree(n,0);vector<int>ans;queue<int>q ;
        for(int i=0;i<n;i++){
            for(auto it:adj[i])indegree[it]++;
        }
        for(int i=0;i<n;i++){
            if(indegree[i]==0){q.push(i);ans.push_back(i);}
        }
        while(q.empty()==false){
            int node=q.front();
            q.pop();
            for(auto it:adj[node]){
                indegree[it]--;
                if(indegree[it]==0){
                    q.push(it);
                    ans.push_back(it);
                }
            }
            
        }
        if(ans.size()==n)return false;
        return true;
        
    }
};
