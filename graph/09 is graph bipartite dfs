class Solution {
public:
      bool dfs(int i, vector<int>&vis,vector<int>&col,vector<vector<int>>& graph){
        vis[i]=1;
        for(auto it:graph[i]){
         if(vis[it]==0){
            if(col[i]==0)col[it]=1;
            if(col[i]==1)col[it]=0;
            if(dfs(it,vis,col,graph)==false)return false;
         }
         else if(vis[it]==1&&col[it]==col[i])return false;

        }
         return true;

      }
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<int>vis(n,0);
        vector<int>col(n,0);
        for(int i=0;i<n;i++){
            if(vis[i]==0){
                col[i]=1;
                if(dfs(i,vis,col,graph)==false)return false;
            }
        }
        return true;
    }
};
